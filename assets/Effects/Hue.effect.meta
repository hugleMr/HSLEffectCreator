{
  "ver": "1.0.23",
  "uuid": "e7cb665d-2c6e-4fbc-9feb-82d2adb180e9",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\n\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision mediump float;  \n  \nvarying vec4 v_color;\nvarying vec2 v_uv0;\n\nuniform sampler2D texture;\n\n uniform float u_dH;\nuniform float u_dS;\nuniform float u_dL;\nvoid main() {  \n\n    vec4 texColor=texture2D(texture, v_uv0.xy).rgba;\n    float r=texColor.r;\n    float g=texColor.g;\n    float b=texColor.b;\n    float a=texColor.a;\n    float h;  \n    float s;  \n    float l;  \n    {  \n        float max=max(max(r,g),b);  \n        float min=min(min(r,g),b);  \n\n        if(max==min){  \n  \n            h=0.0;  \n        }else if(max==r&&g>=b){  \n            h=60.0*(g-b)/(max-min)+0.0;  \n        }else if(max==r&&g<b){  \n            h=60.0*(g-b)/(max-min)+360.0;  \n        }else if(max==g){  \n            h=60.0*(b-r)/(max-min)+120.0;  \n        }else if(max==b){  \n            h=60.0*(r-g)/(max-min)+240.0;  \n        }  \n\n        l=0.5*(max+min);  \n\n        if(l==0.0||max==min){  \n            s=0.0;  \n        }else if(0.0<=l&&l<=0.5){  \n            s=(max-min)/(2.0*l);  \n        }else if(l>0.5){  \n            s=(max-min)/(2.0-2.0*l);  \n        }  \n    }  \n\n    h=h+u_dH;  \n    s=min(1.0,max(0.0,s+u_dS));  \n    \n    vec4 finalColor;  \n    {  \n        float q;  \n        if(l<0.5){  \n            q=l*(1.0+s);  \n        }else if(l>=0.5){  \n            q=l+s-l*s;  \n        }  \n        float p=2.0*l-q;  \n        float hk=h/360.0;  \n        float t[3];  \n        t[0]=hk+1.0/3.0;t[1]=hk;t[2]=hk-1.0/3.0;  \n        for(int i=0;i<3;i++){  \n            if(t[i]<0.0)t[i]+=1.0;  \n            if(t[i]>1.0)t[i]-=1.0;  \n        }\n        float c[3];  \n        for(int i=0;i<3;i++){  \n            if(t[i]<1.0/6.0){  \n                c[i]=p+((q-p)*6.0*t[i]);  \n            }else if((1.0/6.0)<=t[i] && t[i]<0.5)\n            {  \n                c[i]=q;\n            }else if((0.5<=t[i])&&(t[i]<2.0/3.0)){  \n                c[i]=p+((q-p)*6.0*(2.0/3.0-t[i]));  \n            }else{  \n                c[i]=p;  \n            }  \n        }  \n        finalColor=vec4(c[0],c[1],c[2],a);  \n    }  \n  \n    finalColor+=vec4(u_dL,u_dL,u_dL,0.0);  \n  \n    gl_FragColor=finalColor;  \n  \n}\n"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  vec4 cc_time;\n\n  vec4 cc_screenSize;\n\n  vec4 cc_screenScale;\n\n  vec4 cc_nativeSize;\n\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n\n  vec4 cc_exposure;\n\n  vec4 cc_mainLitDir;\n\n  vec4 cc_mainLitColor;\n\n  vec4 cc_ambientSky;\n  vec4 cc_ambientGround;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\n\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\nin vec2 a_uv0;\nout vec2 v_uv0;\n\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n\n  v_color = a_color;\n\n  gl_Position = pos;\n}\n",
        "frag": "\nprecision mediump float;  \n  \nin vec4 v_color;\nin vec2 v_uv0;\n\nuniform sampler2D texture;\n\n uniform INPUT {\n    float u_dH;\n    float u_dS;\n    float u_dL;\n  }\n  \nvoid main() {  \n\n    vec4 texColor=texture2D(texture, v_uv0.xy).rgba;\n    float r=texColor.r;\n    float g=texColor.g;\n    float b=texColor.b;\n    float a=texColor.a;\n    float h;  \n    float s;  \n    float l;  \n    {  \n        float max=max(max(r,g),b);  \n        float min=min(min(r,g),b);  \n\n        if(max==min){  \n  \n            h=0.0;  \n        }else if(max==r&&g>=b){  \n            h=60.0*(g-b)/(max-min)+0.0;  \n        }else if(max==r&&g<b){  \n            h=60.0*(g-b)/(max-min)+360.0;  \n        }else if(max==g){  \n            h=60.0*(b-r)/(max-min)+120.0;  \n        }else if(max==b){  \n            h=60.0*(r-g)/(max-min)+240.0;  \n        }  \n\n        l=0.5*(max+min);  \n\n        if(l==0.0||max==min){  \n            s=0.0;  \n        }else if(0.0<=l&&l<=0.5){  \n            s=(max-min)/(2.0*l);  \n        }else if(l>0.5){  \n            s=(max-min)/(2.0-2.0*l);  \n        }  \n    }  \n\n    h=h+u_dH;  \n    s=min(1.0,max(0.0,s+u_dS));  \n    \n    vec4 finalColor;  \n    {  \n        float q;  \n        if(l<0.5){  \n            q=l*(1.0+s);  \n        }else if(l>=0.5){  \n            q=l+s-l*s;  \n        }  \n        float p=2.0*l-q;  \n        float hk=h/360.0;  \n        float t[3];  \n        t[0]=hk+1.0/3.0;t[1]=hk;t[2]=hk-1.0/3.0;  \n        for(int i=0;i<3;i++){  \n            if(t[i]<0.0)t[i]+=1.0;  \n            if(t[i]>1.0)t[i]-=1.0;  \n        }\n        float c[3];  \n        for(int i=0;i<3;i++){  \n            if(t[i]<1.0/6.0){  \n                c[i]=p+((q-p)*6.0*t[i]);  \n            }else if((1.0/6.0)<=t[i] && t[i]<0.5)\n            {  \n                c[i]=q;\n            }else if((0.5<=t[i])&&(t[i]<2.0/3.0)){  \n                c[i]=p+((q-p)*6.0*(2.0/3.0-t[i]));  \n            }else{  \n                c[i]=p;  \n            }  \n        }  \n        finalColor=vec4(c[0],c[1],c[2],a);  \n    }  \n  \n    finalColor+=vec4(u_dL,u_dL,u_dL,0.0);  \n  \n    gl_FragColor=finalColor;  \n  \n}\n"
      }
    }
  ],
  "subMetas": {}
}